{%- render 'section-spacing-collapsing' -%}

<style>
  #shopify-section-{{ section.id }} {
    --media-with-text-gap: {% if section.settings.spacing == 'none' %}0{% else %}var(--grid-gutter){% endif %};
    --media-with-text-item-grid-template: "media" "content" / auto;
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} {
      --media-with-text-gap: {% case section.settings.spacing %}
        {% when 'none' %}0
        {% when 'small' %}var(--spacing-6)
        {% when 'medium' %}var(--spacing-12)
        {% else %}var(--spacing-18)
      {% endcase %};
    }
  }

  {%- for block in section.blocks -%}
    {%- assign media_ratio = block.settings.media_width | divided_by: 50.0 -%}
    {%- assign content_ratio = 2.0 | minus: media_ratio -%}
    #block-{{ section.id }}-{{ block.id }} {
      --media-with-text-item-icon-width: {{ block.settings.icon_width }}px;
    }

    @media screen and (min-width: 1000px) {
      #block-{{ section.id }}-{{ block.id }} {
        --media-with-text-item-grid-template: {% if block.settings.media_position == 'start' %}"media content" / minmax(0, {{ media_ratio }}fr) minmax(0, {{ content_ratio }}fr){% else %}"content media" / minmax(0, {{ content_ratio }}fr) minmax(0, {{ media_ratio }}fr){% endif %};
      }
    }
  {%- endfor -%}
</style>

<div {% render 'section-properties' %}>
  <media-with-text class="media-with-text {% if section.settings.spacing == 'none' %}{% if section.settings.full_width %}full-bleed{% else %}rounded{% endif %}{% endif %}">
    {%- for block in section.blocks -%}
      <div id="block-{{ section.id }}-{{ block.id }}" class="media-with-text__item" {{ block.shopify_attributes }}>
        <div class="media-with-text__media {% unless section.settings.spacing == 'none' %}rounded{% endunless %}" reveal-on-scroll="true">

          {%- capture poster -%}
            {%- assign poster_image = block.settings.poster_image | default: block.settings.video.preview_image -%}
            {%- if poster_image -%}
              {{- poster_image | image_url: width: poster_image.width | image_tag: loading: 'lazy', sizes: '(max-width: 699px) 400px, 800px', widths: '300,400,500,800,1200', class: 'rounded' -}}
            {%- else -%}
              {{ 'image' | placeholder_svg_tag: 'rounded' }}
            {%- endif -%}
          {%- endcapture -%}

          {%- if block.settings.video -%}
            <video-media {% if block.settings.autoplay %}autoplay{% else %}show-play-button{% endif %}>
              {%- unless block.settings.autoplay -%}
                {{- poster -}}
              {%- endunless -%}
              {{- block.settings.video | video_tag: playsinline: true, controls: true, muted: block.settings.autoplay, loop: block.settings.autoplay, preload: 'metadata' -}}
            </video-media>
          {%- elsif block.settings.external_video_url != blank -%}
            <video-media host="{{ block.settings.external_video_url.type }}" {% if block.settings.autoplay %}autoplay{% else %}show-play-button{% endif %}>
              {%- unless block.settings.autoplay -%}
                {{- poster -}}
              {%- endunless -%}
              <template>
                {%- if block.settings.external_video_url.type == 'youtube' -%}
                  <iframe src="https://www.youtube.com/embed/{{ block.settings.external_video_url.id }}?playsinline=1&autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&controls=1&mute={% if block.settings.autoplay %}1{% else %}0{% endif %}&loop=1&playlist={{ block.settings.external_video_url.id }}" allow="autoplay; encrypted-media" allowfullscreen></iframe>
                {%- elsif block.settings.external_video_url.type == 'vimeo' -%}
                  <iframe src="https://player.vimeo.com/video/{{ block.settings.external_video_url.id }}?autoplay={% if block.settings.autoplay %}1{% else %}0{% endif %}&loop=1&muted={% if block.settings.autoplay %}1{% else %}0{% endif %}&background=1" allow="autoplay; encrypted-media;" allowfullscreen></iframe>
                {%- endif -%}
              </template>
            </video-media>
          {%- endif -%}
        </div>

        <div {% render 'surface', class: 'media-with-text__content', background: block.settings.background, background_gradient: block.settings.background_gradient, text_color: block.settings.text_color %}>
          <div class="prose break-all {{ block.settings.text_position }}" reveal-on-scroll="true">
            {%- if block.settings.subheading != blank -%}
              <p class="bold">{{ block.settings.subheading | escape }}</p>
            {%- endif -%}

            {%- if block.settings.title != blank -%}
              <p class="h2">
                {%- render 'styled-text', content: block.settings.title, gradient: block.settings.text_gradient -%}
              </p>
            {%- endif -%}

            {{- block.settings.content -}}

            {%- if block.settings.link_text != blank -%}
              {%- render 'button', href: block.settings.link_url, content: block.settings.link_text, size: 'xl', background: block.settings.button_background, text_color: block.settings.button_text_color -%}
            {%- endif -%}
          </div>
        </div>
      </div>
    {%- endfor -%}
  </media-with-text>
</div>

{
  "name": "Video with text",
  "class": "shopify-section--video-with-text",
  "tag": "section",
  "disabled_on": {
    "templates": ["password"],
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "info": "Only has effect when spacing is set to none.",
      "default": false
    },
    {
      "type": "select",
      "id": "spacing",
      "label": "Spacing",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "medium"
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video with text block",
      "settings": [
        {
          "type": "range",
          "id": "media_width",
          "min": 30,
          "max": 70,
          "step": 5,
          "unit": "%",
          "label": "Video width",
          "default": 50
        },
        {
          "type": "select",
          "id": "media_position",
          "label": "Video position (desktop)",
          "options": [
            { "value": "start", "label": "Start" },
            { "value": "end", "label": "End" }
          ],
          "default": "start"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Video file"
        },
        {
          "type": "video_url",
          "id": "external_video_url",
          "label": "External video (YouTube/Vimeo)",
          "accept": ["youtube", "vimeo"]
        },
        {
          "type": "image_picker",
          "id": "poster_image",
          "label": "Poster image"
        },
        {
          "type": "checkbox",
          "id": "autoplay",
          "label": "Autoplay",
          "default": true
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "label": "Title",
          "default": "Your video title"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Button label"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Button link"
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Text alignment",
          "options": [
            { "value": "text-start", "label": "Left" },
            { "value": "text-center", "label": "Center" },
            { "value": "text-end", "label": "Right" }
          ],
          "default": "text-start"
        },
        {
          "type": "color_background",
          "id": "background",
          "label": "Background"
        },
        {
          "type": "color_background",
          "id": "background_gradient",
          "label": "Background gradient"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color"
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon (if no image)",
          "options": [
            { "value": "none", "label": "None" },
            { "value": "play", "label": "Play" },
            { "value": "video", "label": "Video" },
            { "value": "star", "label": "Star" }
          ],
          "default": "none"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 12,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Icon width",
          "default": 36
        },
        {
          "type": "select",
          "id": "button_background",
          "label": "Button background",
          "options": [
            { "value": "primary", "label": "Primary" },
            { "value": "secondary", "label": "Secondary" },
            { "value": "tertiary", "label": "Tertiary" }
          ],
          "default": "primary"
        },
        {
          "type": "select",
          "id": "button_text_color",
          "label": "Button text color",
          "options": [
            { "value": "white", "label": "White" },
            { "value": "black", "label": "Black" }
          ],
          "default": "white"
        },
        {
          "type": "color_gradient",
          "id": "text_gradient",
          "label": "Text gradient"
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Video with text",
      "blocks": [
        { "type": "video" },
        { "type": "video" }
      ]
    }
  ]
}
